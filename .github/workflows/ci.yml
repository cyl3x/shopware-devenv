# Inspired by https://github.com/j-brn/nix-rust-template
name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU binfmt for cross compiling
        uses: docker/setup-qemu-action@v3

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v12
        with:
          extra-conf: |
            extra-platforms = aarch64-linux x86_64-linux

      - name: Cache Nix store
        uses: DeterminateSystems/magic-nix-cache-action@v6

      - name: Check flake
        run: nix flake check --accept-flake-config

  build:
    runs-on: ubuntu-latest
    needs:
      - test

    strategy:
      matrix:
        system:
          - aarch64-linux
          - x86_64-linux
        package:
          - swde

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU binfmt for building aarch64
        uses: docker/setup-qemu-action@v3

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v12
        with:
          extra-conf: |
            extra-platforms = aarch64-linux x86_64-linux

      - name: Cache Nix store
        uses: DeterminateSystems/magic-nix-cache-action@v6

      - name: Build package
        run: nix build --accept-flake-config .#packages.${{ matrix.system }}.${{ matrix.package }}

  bundle:
    runs-on: ubuntu-latest
    needs:
      - build

    strategy:
      matrix:
        system:
          - aarch64-linux
          - x86_64-linux
        bundler:
          - name: debian
            path: github:viperML/bundlers#deb
            extension: deb

          - name: docker
            path: github:viperML/bundlers#zip
            extension: zip

          - name: appimage
            path: github:ralismark/nix-appimage
            extension: AppImage
        package:
          - swde

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU binfmt for cross compiling
        uses: docker/setup-qemu-action@v3

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v11
        with:
          extra-conf: |
            extra-platforms = aarch64-linux x86_64-linux

      - name: Cache Nix store
        uses: DeterminateSystems/magic-nix-cache-action@v6

      - name: Build ${{ matrix.bundler.name }} package for ${{ matrix.system }}
        run: >-
          nix bundle
          --bundler ${{ matrix.bundler.path }}
          --accept-flake-config
          --out-link result
          .#packages.${{ matrix.system }}.${{ matrix.package }}

      - name: Prepare Bundle for upload
        run: >-
          cp
          --no-preserve=mode,ownership
          $(find -L result -type f -print -quit)
          ${{ matrix.package }}-${{ github.ref_name }}-${{ matrix.bundler.name }}-${{ matrix.system }}.${{ matrix.bundler.extension }}

      - name: Upload bundle
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.package }}-${{ github.ref_name }}-${{ matrix.bundler.name }}-${{ matrix.system }}
          path: ${{ matrix.package }}-${{ github.ref_name }}-${{ matrix.bundler.name }}-${{ matrix.system }}.${{ matrix.bundler.extension }}
